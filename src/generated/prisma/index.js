/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, '__esModule', { value: true })

const {
    PrismaClientKnownRequestError,
    PrismaClientUnknownRequestError,
    PrismaClientRustPanicError,
    PrismaClientInitializationError,
    PrismaClientValidationError,
    getPrismaClient,
    sqltag,
    empty,
    join,
    raw,
    skip,
    Decimal,
    Debug,
    objectEnumValues,
    makeStrictEnum,
    Extensions,
    warnOnce,
    defineDmmfProperty,
    Public,
    getRuntime,
    createParam,
} = require('./runtime/library.js')

const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.13.0
 * Query Engine version: 361e86d0ea4987e9f53a565309b3eed797a6bcbd
 */
Prisma.prismaVersion = {
    client: '6.13.0',
    engine: '361e86d0ea4987e9f53a565309b3eed797a6bcbd',
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
 * Extensions
 */
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
    DbNull: objectEnumValues.classes.DbNull,
    JsonNull: objectEnumValues.classes.JsonNull,
    AnyNull: objectEnumValues.classes.AnyNull,
}

const path = require('path')

/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable',
})

exports.Prisma.Tb_destinationScalarFieldEnum = {
    destination_id: 'destination_id',
    name: 'name',
    destinations: 'destinations',
    quota: 'quota',
    is_open: 'is_open',
    price: 'price',
}

exports.Prisma.Tb_payment_statusScalarFieldEnum = {
    pay_status_id: 'pay_status_id',
    Name: 'Name',
}

exports.Prisma.Tb_payment_typeScalarFieldEnum = {
    pay_type_id: 'pay_type_id',
    name: 'name',
}

exports.Prisma.Tb_roleScalarFieldEnum = {
    role_id: 'role_id',
    name: 'name',
}

exports.Prisma.Tb_trip_statusScalarFieldEnum = {
    trip_status_id: 'trip_status_id',
    name: 'name',
}

exports.Prisma.Tb_payment_historyScalarFieldEnum = {
    pay_hist_id: 'pay_hist_id',
    pay_status_id: 'pay_status_id',
    created_at: 'created_at',
    trip_invoice_id: 'trip_invoice_id',
}

exports.Prisma.Tb_tripScalarFieldEnum = {
    trip_id: 'trip_id',
    user_id: 'user_id',
    destination_id: 'destination_id',
    start_time: 'start_time',
    end_time: 'end_time',
    created_at: 'created_at',
    updated_at: 'updated_at',
    trip_status: 'trip_status',
    schedule_at: 'schedule_at',
    created_by: 'created_by',
    updated_by: 'updated_by',
}

exports.Prisma.Tb_trip_invoiceScalarFieldEnum = {
    trip_invoice_id: 'trip_invoice_id',
    invoice_no: 'invoice_no',
    quantity: 'quantity',
    total_amount: 'total_amount',
    pay_type_id: 'pay_type_id',
    trip_id: 'trip_id',
}

exports.Prisma.Tb_userScalarFieldEnum = {
    user_id: 'user_id',
    name: 'name',
    email: 'email',
    password: 'password',
    role_id: 'role_id',
    created_at: 'created_at',
    created_by: 'created_by',
    updated_by: 'updated_by',
    is_active: 'is_active',
}

exports.Prisma.SortOrder = {
    asc: 'asc',
    desc: 'desc',
}

exports.Prisma.QueryMode = {
    default: 'default',
    insensitive: 'insensitive',
}

exports.Prisma.NullsOrder = {
    first: 'first',
    last: 'last',
}

exports.Prisma.ModelName = {
    tb_destination: 'tb_destination',
    tb_payment_status: 'tb_payment_status',
    tb_payment_type: 'tb_payment_type',
    tb_role: 'tb_role',
    tb_trip_status: 'tb_trip_status',
    tb_payment_history: 'tb_payment_history',
    tb_trip: 'tb_trip',
    tb_trip_invoice: 'tb_trip_invoice',
    tb_user: 'tb_user',
}
/**
 * Create the Client
 */
const config = {
    generator: {
        name: 'client',
        provider: {
            fromEnvVar: null,
            value: 'prisma-client-js',
        },
        output: {
            value: 'C:\\Users\\fajar\\Desktop\\Workspace\\test-biro-perjalanan\\src\\generated\\prisma',
            fromEnvVar: null,
        },
        config: {
            engineType: 'library',
        },
        binaryTargets: [
            {
                fromEnvVar: null,
                value: 'windows',
                native: true,
            },
        ],
        previewFeatures: [],
        sourceFilePath: 'C:\\Users\\fajar\\Desktop\\Workspace\\test-biro-perjalanan\\prisma\\schema.prisma',
        isCustomOutput: true,
    },
    relativeEnvPaths: {
        rootEnvPath: null,
        schemaEnvPath: '../../../.env',
    },
    relativePath: '../../../prisma',
    clientVersion: '6.13.0',
    engineVersion: '361e86d0ea4987e9f53a565309b3eed797a6bcbd',
    datasourceNames: ['db'],
    activeProvider: 'postgresql',
    postinstall: false,
    inlineDatasources: {
        db: {
            url: {
                fromEnvVar: 'DATABASE_URL',
                value: null,
            },
        },
    },
    inlineSchema:
        'generator client {\n  provider = "prisma-client-js"\n  output   = "../src/generated/prisma"\n}\n\ndatasource db {\n  provider = "postgresql"\n  url      = env("DATABASE_URL")\n  schemas  = ["master", "public"]\n}\n\nmodel tb_destination {\n  destination_id BigInt    @id(map: "tb_destination_pk") @default(autoincrement())\n  name           String?   @db.VarChar\n  destinations   String[]  @db.VarChar\n  quota          BigInt?\n  is_open        Boolean?\n  price          Decimal?  @db.Decimal\n  tb_trip        tb_trip[]\n\n  @@schema("master")\n}\n\nmodel tb_payment_status {\n  pay_status_id      BigInt               @id(map: "tb_payment_status_pk") @default(autoincrement())\n  Name               String?              @db.VarChar\n  tb_payment_history tb_payment_history[]\n\n  @@schema("master")\n}\n\nmodel tb_payment_type {\n  pay_type_id     BigInt            @id(map: "tb_payment_type_pk") @default(autoincrement())\n  name            String?           @db.VarChar\n  tb_trip_invoice tb_trip_invoice[]\n\n  @@schema("master")\n}\n\nmodel tb_role {\n  role_id Int       @id(map: "Role_pkey") @default(autoincrement())\n  name    String    @unique(map: "Role_name_key")\n  tb_user tb_user[]\n\n  @@schema("master")\n}\n\nmodel tb_trip_status {\n  trip_status_id BigInt    @id(map: "tb_trip_status_pk") @default(autoincrement())\n  name           String?   @db.VarChar\n  tb_trip        tb_trip[]\n\n  @@schema("master")\n}\n\nmodel tb_payment_history {\n  pay_hist_id       BigInt             @id(map: "tb_payment_history_pk") @default(autoincrement())\n  pay_status_id     BigInt?\n  created_at        DateTime?          @db.Timestamptz(6)\n  trip_invoice_id   BigInt?\n  tb_payment_status tb_payment_status? @relation(fields: [pay_status_id], references: [pay_status_id], onDelete: NoAction, onUpdate: NoAction, map: "tb_payment_history_tb_payment_status_fk")\n  tb_trip_invoice   tb_trip_invoice?   @relation(fields: [trip_invoice_id], references: [trip_invoice_id], onDelete: NoAction, onUpdate: NoAction, map: "tb_payment_history_tb_trip_invoice_fk")\n\n  @@schema("public")\n}\n\nmodel tb_trip {\n  trip_id         BigInt            @id @default(autoincrement())\n  user_id         String            @db.Uuid\n  destination_id  BigInt\n  start_time      DateTime?         @db.Timestamptz(6)\n  end_time        DateTime?         @db.Timestamptz(6)\n  created_at      DateTime?         @default(now()) @db.Timestamptz(6)\n  updated_at      DateTime?         @default(now()) @db.Timestamptz(6)\n  trip_status     BigInt?\n  schedule_at     DateTime?         @db.Date\n  created_by      String?           @db.VarChar\n  updated_by      String?           @db.VarChar\n  tb_destination  tb_destination    @relation(fields: [destination_id], references: [destination_id], onDelete: NoAction, onUpdate: NoAction, map: "tb_trip_tb_destination_fk")\n  tb_trip_status  tb_trip_status?   @relation(fields: [trip_status], references: [trip_status_id], onDelete: NoAction, onUpdate: NoAction, map: "tb_trip_tb_trip_status_fk")\n  tb_user         tb_user           @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction)\n  tb_trip_invoice tb_trip_invoice[]\n\n  @@schema("public")\n}\n\nmodel tb_trip_invoice {\n  trip_invoice_id    BigInt               @id(map: "tb_trip_invoice_pk") @default(autoincrement())\n  invoice_no         String?              @db.VarChar\n  quantity           BigInt?\n  total_amount       Decimal?             @db.Decimal\n  pay_type_id        BigInt?\n  trip_id            BigInt?\n  tb_payment_history tb_payment_history[]\n  tb_payment_type    tb_payment_type?     @relation(fields: [pay_type_id], references: [pay_type_id], onDelete: NoAction, onUpdate: NoAction, map: "tb_trip_invoice_tb_payment_type_fk")\n  tb_trip            tb_trip?             @relation(fields: [trip_id], references: [trip_id], onDelete: NoAction, onUpdate: NoAction, map: "tb_trip_invoice_tb_trip_fk")\n\n  @@schema("public")\n}\n\nmodel tb_user {\n  user_id    String    @id(map: "User_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid\n  name       String\n  email      String    @unique(map: "User_email_key")\n  password   String\n  role_id    Int\n  created_at DateTime? @default(now()) @db.Timestamptz(6)\n  created_by String?   @db.Uuid\n  updated_by String?   @db.Uuid\n  is_active  Boolean?\n  tb_trip    tb_trip[]\n  tb_role    tb_role   @relation(fields: [role_id], references: [role_id], onUpdate: NoAction, map: "User_role_id_fkey")\n\n  @@schema("public")\n}\n',
    inlineSchemaHash: '85f26235729c0b26b9f815af693dfbbc8e7c8156f6794bf1afa20f24b403cf3c',
    copyEngine: true,
}

const fs = require('fs')

config.dirname = __dirname
if (!fs.existsSync(path.join(__dirname, 'schema.prisma'))) {
    const alternativePaths = ['src/generated/prisma', 'generated/prisma']

    const alternativePath =
        alternativePaths.find((altPath) => {
            return fs.existsSync(path.join(process.cwd(), altPath, 'schema.prisma'))
        }) ?? alternativePaths[0]

    config.dirname = path.join(process.cwd(), alternativePath)
    config.isBundled = true
}

config.runtimeDataModel = JSON.parse(
    '{"models":{"tb_destination":{"dbName":null,"schema":"master","fields":[{"name":"destination_id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":true,"type":"BigInt","nativeType":null,"default":{"name":"autoincrement","args":[]},"isGenerated":false,"isUpdatedAt":false},{"name":"name","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":["VarChar",[]],"isGenerated":false,"isUpdatedAt":false},{"name":"destinations","kind":"scalar","isList":true,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":["VarChar",[]],"isGenerated":false,"isUpdatedAt":false},{"name":"quota","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"BigInt","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"is_open","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"Boolean","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"price","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"Decimal","nativeType":["Decimal",[]],"isGenerated":false,"isUpdatedAt":false},{"name":"tb_trip","kind":"object","isList":true,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"tb_trip","nativeType":null,"relationName":"tb_destinationTotb_trip","relationFromFields":[],"relationToFields":[],"isGenerated":false,"isUpdatedAt":false}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false},"tb_payment_status":{"dbName":null,"schema":"master","fields":[{"name":"pay_status_id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":true,"type":"BigInt","nativeType":null,"default":{"name":"autoincrement","args":[]},"isGenerated":false,"isUpdatedAt":false},{"name":"Name","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":["VarChar",[]],"isGenerated":false,"isUpdatedAt":false},{"name":"tb_payment_history","kind":"object","isList":true,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"tb_payment_history","nativeType":null,"relationName":"tb_payment_historyTotb_payment_status","relationFromFields":[],"relationToFields":[],"isGenerated":false,"isUpdatedAt":false}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false},"tb_payment_type":{"dbName":null,"schema":"master","fields":[{"name":"pay_type_id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":true,"type":"BigInt","nativeType":null,"default":{"name":"autoincrement","args":[]},"isGenerated":false,"isUpdatedAt":false},{"name":"name","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":["VarChar",[]],"isGenerated":false,"isUpdatedAt":false},{"name":"tb_trip_invoice","kind":"object","isList":true,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"tb_trip_invoice","nativeType":null,"relationName":"tb_payment_typeTotb_trip_invoice","relationFromFields":[],"relationToFields":[],"isGenerated":false,"isUpdatedAt":false}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false},"tb_role":{"dbName":null,"schema":"master","fields":[{"name":"role_id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":true,"type":"Int","nativeType":null,"default":{"name":"autoincrement","args":[]},"isGenerated":false,"isUpdatedAt":false},{"name":"name","kind":"scalar","isList":false,"isRequired":true,"isUnique":true,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"tb_user","kind":"object","isList":true,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"tb_user","nativeType":null,"relationName":"tb_roleTotb_user","relationFromFields":[],"relationToFields":[],"isGenerated":false,"isUpdatedAt":false}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false},"tb_trip_status":{"dbName":null,"schema":"master","fields":[{"name":"trip_status_id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":true,"type":"BigInt","nativeType":null,"default":{"name":"autoincrement","args":[]},"isGenerated":false,"isUpdatedAt":false},{"name":"name","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":["VarChar",[]],"isGenerated":false,"isUpdatedAt":false},{"name":"tb_trip","kind":"object","isList":true,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"tb_trip","nativeType":null,"relationName":"tb_tripTotb_trip_status","relationFromFields":[],"relationToFields":[],"isGenerated":false,"isUpdatedAt":false}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false},"tb_payment_history":{"dbName":null,"schema":"public","fields":[{"name":"pay_hist_id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":true,"type":"BigInt","nativeType":null,"default":{"name":"autoincrement","args":[]},"isGenerated":false,"isUpdatedAt":false},{"name":"pay_status_id","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":true,"hasDefaultValue":false,"type":"BigInt","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"created_at","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"DateTime","nativeType":["Timestamptz",["6"]],"isGenerated":false,"isUpdatedAt":false},{"name":"trip_invoice_id","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":true,"hasDefaultValue":false,"type":"BigInt","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"tb_payment_status","kind":"object","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"tb_payment_status","nativeType":null,"relationName":"tb_payment_historyTotb_payment_status","relationFromFields":["pay_status_id"],"relationToFields":["pay_status_id"],"relationOnDelete":"NoAction","relationOnUpdate":"NoAction","isGenerated":false,"isUpdatedAt":false},{"name":"tb_trip_invoice","kind":"object","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"tb_trip_invoice","nativeType":null,"relationName":"tb_payment_historyTotb_trip_invoice","relationFromFields":["trip_invoice_id"],"relationToFields":["trip_invoice_id"],"relationOnDelete":"NoAction","relationOnUpdate":"NoAction","isGenerated":false,"isUpdatedAt":false}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false},"tb_trip":{"dbName":null,"schema":"public","fields":[{"name":"trip_id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":true,"type":"BigInt","nativeType":null,"default":{"name":"autoincrement","args":[]},"isGenerated":false,"isUpdatedAt":false},{"name":"user_id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":true,"hasDefaultValue":false,"type":"String","nativeType":["Uuid",[]],"isGenerated":false,"isUpdatedAt":false},{"name":"destination_id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":true,"hasDefaultValue":false,"type":"BigInt","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"start_time","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"DateTime","nativeType":["Timestamptz",["6"]],"isGenerated":false,"isUpdatedAt":false},{"name":"end_time","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"DateTime","nativeType":["Timestamptz",["6"]],"isGenerated":false,"isUpdatedAt":false},{"name":"created_at","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":true,"type":"DateTime","nativeType":["Timestamptz",["6"]],"default":{"name":"now","args":[]},"isGenerated":false,"isUpdatedAt":false},{"name":"updated_at","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":true,"type":"DateTime","nativeType":["Timestamptz",["6"]],"default":{"name":"now","args":[]},"isGenerated":false,"isUpdatedAt":false},{"name":"trip_status","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":true,"hasDefaultValue":false,"type":"BigInt","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"schedule_at","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"DateTime","nativeType":["Date",[]],"isGenerated":false,"isUpdatedAt":false},{"name":"created_by","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":["VarChar",[]],"isGenerated":false,"isUpdatedAt":false},{"name":"updated_by","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":["VarChar",[]],"isGenerated":false,"isUpdatedAt":false},{"name":"tb_destination","kind":"object","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"tb_destination","nativeType":null,"relationName":"tb_destinationTotb_trip","relationFromFields":["destination_id"],"relationToFields":["destination_id"],"relationOnDelete":"NoAction","relationOnUpdate":"NoAction","isGenerated":false,"isUpdatedAt":false},{"name":"tb_trip_status","kind":"object","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"tb_trip_status","nativeType":null,"relationName":"tb_tripTotb_trip_status","relationFromFields":["trip_status"],"relationToFields":["trip_status_id"],"relationOnDelete":"NoAction","relationOnUpdate":"NoAction","isGenerated":false,"isUpdatedAt":false},{"name":"tb_user","kind":"object","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"tb_user","nativeType":null,"relationName":"tb_tripTotb_user","relationFromFields":["user_id"],"relationToFields":["user_id"],"relationOnDelete":"Cascade","relationOnUpdate":"NoAction","isGenerated":false,"isUpdatedAt":false},{"name":"tb_trip_invoice","kind":"object","isList":true,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"tb_trip_invoice","nativeType":null,"relationName":"tb_tripTotb_trip_invoice","relationFromFields":[],"relationToFields":[],"isGenerated":false,"isUpdatedAt":false}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false},"tb_trip_invoice":{"dbName":null,"schema":"public","fields":[{"name":"trip_invoice_id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":true,"type":"BigInt","nativeType":null,"default":{"name":"autoincrement","args":[]},"isGenerated":false,"isUpdatedAt":false},{"name":"invoice_no","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":["VarChar",[]],"isGenerated":false,"isUpdatedAt":false},{"name":"quantity","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"BigInt","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"total_amount","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"Decimal","nativeType":["Decimal",[]],"isGenerated":false,"isUpdatedAt":false},{"name":"pay_type_id","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":true,"hasDefaultValue":false,"type":"BigInt","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"trip_id","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":true,"hasDefaultValue":false,"type":"BigInt","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"tb_payment_history","kind":"object","isList":true,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"tb_payment_history","nativeType":null,"relationName":"tb_payment_historyTotb_trip_invoice","relationFromFields":[],"relationToFields":[],"isGenerated":false,"isUpdatedAt":false},{"name":"tb_payment_type","kind":"object","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"tb_payment_type","nativeType":null,"relationName":"tb_payment_typeTotb_trip_invoice","relationFromFields":["pay_type_id"],"relationToFields":["pay_type_id"],"relationOnDelete":"NoAction","relationOnUpdate":"NoAction","isGenerated":false,"isUpdatedAt":false},{"name":"tb_trip","kind":"object","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"tb_trip","nativeType":null,"relationName":"tb_tripTotb_trip_invoice","relationFromFields":["trip_id"],"relationToFields":["trip_id"],"relationOnDelete":"NoAction","relationOnUpdate":"NoAction","isGenerated":false,"isUpdatedAt":false}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false},"tb_user":{"dbName":null,"schema":"public","fields":[{"name":"user_id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":true,"type":"String","nativeType":["Uuid",[]],"default":{"name":"dbgenerated","args":["gen_random_uuid()"]},"isGenerated":false,"isUpdatedAt":false},{"name":"name","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"email","kind":"scalar","isList":false,"isRequired":true,"isUnique":true,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"password","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"role_id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":true,"hasDefaultValue":false,"type":"Int","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"created_at","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":true,"type":"DateTime","nativeType":["Timestamptz",["6"]],"default":{"name":"now","args":[]},"isGenerated":false,"isUpdatedAt":false},{"name":"created_by","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":["Uuid",[]],"isGenerated":false,"isUpdatedAt":false},{"name":"updated_by","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":["Uuid",[]],"isGenerated":false,"isUpdatedAt":false},{"name":"is_active","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"Boolean","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"tb_trip","kind":"object","isList":true,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"tb_trip","nativeType":null,"relationName":"tb_tripTotb_user","relationFromFields":[],"relationToFields":[],"isGenerated":false,"isUpdatedAt":false},{"name":"tb_role","kind":"object","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"tb_role","nativeType":null,"relationName":"tb_roleTotb_user","relationFromFields":["role_id"],"relationToFields":["role_id"],"relationOnUpdate":"NoAction","isGenerated":false,"isUpdatedAt":false}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false}},"enums":{},"types":{}}'
)
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = undefined
config.compilerWasm = undefined

const { warnEnvConflicts } = require('./runtime/library.js')

warnEnvConflicts({
    rootEnvPath:
        config.relativeEnvPaths.rootEnvPath && path.resolve(config.dirname, config.relativeEnvPaths.rootEnvPath),
    schemaEnvPath:
        config.relativeEnvPaths.schemaEnvPath && path.resolve(config.dirname, config.relativeEnvPaths.schemaEnvPath),
})

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

// file annotations for bundling tools to include these files
path.join(__dirname, 'query_engine-windows.dll.node')
path.join(process.cwd(), 'src/generated/prisma/query_engine-windows.dll.node')
// file annotations for bundling tools to include these files
path.join(__dirname, 'schema.prisma')
path.join(process.cwd(), 'src/generated/prisma/schema.prisma')
